/*Книга — объект, который содержит информацию о названии, авторе, жанре, 
году издания и статусе (доступна или на руках у читателя).
2. Reader — объект, который представляет пользователя библиотеки. У 
каждого читателя есть уникальный идентификатор, имя, список взятых книг и 
сроки их возврата.
3. Librarian — объект, который управляет выдачей и возвратом книг. 
Библиотекарь имеет доступ к каталогу книг и списку читателей.
4. ElectronicResource — объект, который представляет цифровые 
материалы (например, электронные книги или аудиокниги). Электронные 
ресурсы могут быть доступны для чтения онлайн или скачивания.
Требования к реализации:
1. Интерфейсы:
o Создать интерфейс Borrowable, который будет содержать методы для 
выдачи (issue) и возврата (returnItem) объектов.
o Создать интерфейс Searchable, который будет содержать метод для 
поиска объекта по названию (searchByTitle).
2. Множественное наследование:
o Класс Book должен реализовывать интерфейс Borrowable.
o Класс ElectronicResource должен реализовывать 
интерфейсы Borrowable и Searchable.
o Класс Librarian должен реализовывать интерфейс Searchable.
3. Бизнес-логика:
o Реализовать возм ожность выдачи книги или электронного ресурса 
читателю, если они доступны.
o Реализовать возможность возврата книги или электронного ресурса в 
библиотеку.
o Реализовать поиск книги или электронного ресурса по названию.
o Рассчитать штраф для читателя, если книга или электронный ресурс 
возвращены с опозданием (например, штраф рассчитывается как 10 
рублей за каждый день просрочки).
4. Дополнительно:
o Создать абстрактный класс LibraryItem, от которого будут наследоваться 
классы Book и ElectronicResource. Этот класс должен содержать общие 
поля, такие как title и author, а также метод getDescription, который 
возвращает описание объекта.*/
public class App {
    public static void main(String[] args) {
        System.out.println(".()");
    }
}